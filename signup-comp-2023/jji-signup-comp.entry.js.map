{"file":"jji-signup-comp.entry.esm.js","mappings":"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","names":[],"sources":["src/components/signup-comp/signup-comp.css?tag=jji-signup-comp","src/components/signup-comp/signup-comp.tsx"],"sourcesContent":[".form {\r\n    position: fixed;\r\n    width: 25rem;\r\n    font-family: sans-serif;\r\n    height: 31.25rem;\r\n    text-align: center;\r\n    background-color: black;\r\n    margin-left: 35%;\r\n    margin-top: 8%;\r\n    border-radius: 1rem;\r\n    opacity: 0.9;\r\n    z-index: 100;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n.form div {\r\n    margin-bottom: 1.2rem;\r\n}\r\n\r\n.form a {\r\n    color: #FDA50F;\r\n    text-decoration: none;\r\n  }\r\n  \r\n  .form a:hover {\r\n    text-decoration: underline;\r\n  }\r\n\r\n#signup {\r\n    color: #FDA50F;\r\n    font-family: sans-serif;\r\n    font-size: 2.8rem;\r\n    margin-bottom: 1.2rem;\r\n}\r\n\r\n#n,\r\n#e,\r\n#p1,\r\n#p2 {\r\n    width: 15.625rem; \r\n    height: 1.563rem;\r\n    border-radius: 0.625rem; \r\n    text-align: center;\r\n    font-family: sans-serif;\r\n    font-size: 1.2rem; \r\n    background-color: rgb(229, 226, 226);\r\n    border-color: whitesmoke;\r\n    border-width: 0.125rem; \r\n    color: black;\r\n    margin-bottom: 1.2rem;\r\n}\r\n\r\n.s {\r\n    width: 100%; \r\n    height: 0.5rem;\r\n    border-radius: 0.625rem; \r\n    text-align: center;\r\n    font-family: sans-serif;\r\n    font-size: 0.82rem; \r\n    background-color: black;\r\n    border-width: 0.125rem; \r\n    color: white;\r\n    margin-bottom: 1.2rem;\r\n}\r\n\r\n#create {\r\n    width: 16rem;\r\n    height: 2.3rem;\r\n    font-family: sans-serif;\r\n    font-size: 1.1rem;\r\n    font-weight: bold;\r\n    border-radius: 0.8rem;\r\n    background-color: black;\r\n    border-color: #FDA50F;\r\n    color: #FDA50F;\r\n    opacity: 0.8;\r\n    margin-top: 0.625rem;\r\n    margin-top: 1.2rem;\r\n}\r\n\r\n::placeholder {\r\n    color: #e1ad21;\r\n    opacity: 0.8;\r\n}\r\n\r\n.backdrop {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100vh;\r\n    background-color: rgba(0, 0, 0, 0.75);\r\n    z-index: 10;\r\n    opacity: 0;\r\n    pointer-events: none;\r\n    transition: opacity 0.3s ease-out;\r\n}\r\n\r\n.backdrop.opened {\r\n    opacity: 1;\r\n    pointer-events: all;\r\n}\r\n\r\n.error {\r\n    color: red;\r\n    font-size: 0.9rem;\r\n    margin-top: 0.7rem;\r\n}\r\n\r\n\r\n","import { Component, Method, Prop, State, h, EventEmitter, Event, Watch } from \"@stencil/core\";\r\n// import { FETCH_API } from \"../global/Fetch-API\";\r\n\r\n\r\n\r\n@Component({\r\n    tag: 'jji-signup-comp',\r\n    styleUrl: './signup-comp.css',\r\n\r\n})\r\nexport class SignUpComp {\r\n\r\n\r\n\r\n    //Emitted when the form data is successfully submitted.\r\n    //Contains the form data as an object.\r\n    @Event({ bubbles: true, composed: true }) formDataSubmitted: EventEmitter<{ username: string, email: string, password: string, confirmPassword: string }>;\r\n\r\n\r\n    //Event listener for the event...specially to know the sign in link is clicked.\r\n    @Event({ bubbles: true, composed: true }) signInLinkClick: EventEmitter<any>;\r\n    onSignInLinkClick() {\r\n        this.signInLinkClick.emit();\r\n        console.log('Sign In Button');\r\n    }\r\n\r\n    @Prop({ reflect: true }) titl: string;\r\n\r\n    //Controls the visibility of the sign-up form.\r\n    @Prop({ reflect: true, mutable: true }) opened: boolean;\r\n\r\n\r\n    //The user's username,e-mail,password,confirmpassword input value in the form.\r\n    @State() username: string = '';\r\n    @State() email: string = '';\r\n    @State() password: string = '';\r\n    @State() confirmPassword: string = '';\r\n\r\n\r\n    //Indicates whether the entered passwords match.\r\n    @State() passwordsMatch: boolean = true;\r\n\r\n    // Error message displayed when the passwords do not match.\r\n    @State() errorMessage: string = '';\r\n\r\n    //Indicates whether the form has been submitted.\r\n    @State() formSubmitted: boolean = false;\r\n\r\n    //The initial value of the password when the form is submitted for the first time.\r\n    //Used to track if the user corrects the password after the initial submission.\r\n    @State() initialPassword: string = '';\r\n\r\n    //New state variable to control the error message\r\n    @State() showFormError: boolean = false;\r\n\r\n    //Method to open and close the sign-up form.\r\n    @Method()\r\n    async openSignUpComp() {\r\n        console.log('Sign Up Is Open');\r\n        this.opened = true;\r\n        this.initialPassword = '';\r\n        // Reset the error message state when the component is opened\r\n        this.showFormError = false;\r\n    }\r\n    closeSignUpComp() {\r\n        console.log('Sign Up Is Closed');\r\n        this.opened = false;\r\n    }\r\n\r\n    //Watcher to monitor changes in the password and confirm password fields.\r\n    //It checks if the passwords have been corrected and match again.\r\n    @Watch('password')\r\n    @Watch('confirmPassword')\r\n    handlePasswordChange(newValue: string) {\r\n\r\n        //Check if the passwords have been corrected (not empty) and match again\r\n        if (newValue !== '' && this.password === this.confirmPassword) {\r\n            this.passwordsMatch = true;\r\n        } else {\r\n            this.passwordsMatch = false;\r\n        }\r\n    }\r\n\r\n\r\n    handleCreateAccountClick(event: MouseEvent) {\r\n        // Check if the form has been submitted\r\n        if (!this.formSubmitted) {\r\n            // Show the error message when the \"Create Account\" button is clicked\r\n            this.showFormError = true;\r\n\r\n            // Check if any required fields are empty\r\n            if (this.username === '' || this.email === '' || this.password === '' || this.confirmPassword === '') {\r\n                // Prevent form submission if fields are empty\r\n                event.preventDefault();\r\n            } else {\r\n                // If all required fields are filled, perform form submission\r\n                this.handleSubmit(event);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    //Method to handle form submission\r\n    async handleSubmit(event: Event) {\r\n        event.preventDefault();\r\n\r\n        //Check if passwords match\r\n        if (this.password === this.confirmPassword) {\r\n\r\n            //Set the initialPassword when the form is submitted for the first time\r\n            if (this.initialPassword === '') {\r\n                this.initialPassword = this.password;\r\n            }\r\n            this.passwordsMatch = true;\r\n\r\n            //Fetch the API and send the form data\r\n            const formData = {\r\n                username: this.username,\r\n                email: this.email,\r\n                password: this.password,\r\n                confirmPassword: this.confirmPassword,\r\n            };\r\n            console.log(formData);\r\n\r\n            //Emit the form data through the custom event\r\n            this.formDataSubmitted.emit(formData);\r\n\r\n\r\n            // //Perform the API call or data storage logic here\r\n            // try {\r\n            //     const response = await fetch(`${FETCH_API}`, {\r\n            //         method: 'POST',\r\n            //         headers: {\r\n            //             'Content-Type': 'application/json',\r\n            //         },\r\n            //         body: JSON.stringify(formData),\r\n            //     });\r\n            //     if (response.ok) {\r\n\r\n            //         //Passwords match and the form data is submitted successfully\r\n            //         //Redirect to the success page\r\n            //         // window.location.href = '/success.html';\r\n\r\n            //     } else {\r\n            //         console.log(response);\r\n            //     }\r\n            // } catch (error) {\r\n            //     console.error('Error submitting form:', error);\r\n            // }\r\n\r\n            // //Set formSubmitted to true after successful submission\r\n            // this.formSubmitted = true;\r\n        } else {\r\n            //Passwords don't match, show an error message or take appropriate action\r\n            this.passwordsMatch = false;\r\n\r\n            // Do not submit the form until all fields are filled correctly\r\n            this.formSubmitted = false;\r\n        }\r\n    }\r\n\r\n    //Render method to generate the component's HTML\r\n    render() {\r\n        let mainContent = null;\r\n\r\n        if (this.opened) {\r\n            mainContent = [\r\n                //HTML code for backdrop and form\r\n                <div class=\"backdrop opened\" onClick={this.closeSignUpComp.bind(this)}>\r\n                </div>,\r\n\r\n                <div>\r\n                    <form class=\"form\">\r\n                        <div>\r\n                            <h1 class=\"signup-title\" id=\"signup\">{this.titl}</h1>\r\n                        </div>\r\n                        <div>\r\n                            <input\r\n                                id=\"n\"\r\n                                type=\"text\"\r\n                                placeholder=\"Username\"\r\n                                title=\"username\"\r\n                                value={this.username}\r\n                                onChange={(event) => this.username = (event.target as HTMLInputElement).value} />\r\n                        </div>\r\n                        <div>\r\n                            <input\r\n                                id=\"e\"\r\n                                type=\"email\"\r\n                                placeholder=\"Something@hotmail.com\"\r\n                                title=\"email\"\r\n                                value={this.email}\r\n                                onChange={(event) => this.email = (event.target as HTMLInputElement).value} />\r\n                        </div>\r\n                        <input\r\n                            id=\"p1\"\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            title=\"password\"\r\n                            required\r\n                            value={this.password}\r\n                            onInput={(event) => (this.password = (event.target as HTMLInputElement).value)}\r\n                        />\r\n\r\n                        <input\r\n                            id=\"p2\"\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm Password\"\r\n                            title=\"confirm password\"\r\n                            required\r\n                            value={this.confirmPassword}\r\n                            onInput={(event) => (this.confirmPassword = (event.target as HTMLInputElement).value)}\r\n                        />\r\n                        <div>\r\n                            {/* Check if showFormError is true and form has not been submitted */}\r\n                            {this.showFormError && !this.formSubmitted && (this.username === '' || this.email === '' || this.password === '' || this.confirmPassword === '') && (\r\n                                <div>\r\n                                    <span id=\"error-message\" class=\"error\">\r\n                                        Please Fill All Required Fields.\r\n                                    </span>\r\n                                </div>\r\n                            )}\r\n                            {this.passwordsMatch ? [\r\n                                <div>\r\n                                    <button\r\n                                        id=\"create\"\r\n                                        class=\"n\"\r\n                                        onClick={(event) => this.handleCreateAccountClick(event)}>\r\n                                        Create Account\r\n                                    </button>\r\n                                </div>,\r\n                                <div>\r\n                                    <span id=\"sign-in-take\" class=\"s\">\r\n                                        Already Have An Account?\r\n                                        <a onClick={this.onSignInLinkClick.bind(this)}>\r\n                                            Sign In\r\n                                        </a>\r\n                                    </span>\r\n                                </div>\r\n                            ] : (\r\n                                <div>\r\n                                    <span id=\"error-message\" class=\"error\">\r\n                                        Passwords Do Not Match. Please Try Again.\r\n                                    </span>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            ];\r\n        }\r\n\r\n        return (\r\n            <div id=\"signup-comp\">\r\n                {mainContent}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}"],"version":3}