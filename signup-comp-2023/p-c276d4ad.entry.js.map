{"version":3,"names":["signupCompCss","SignUpComp","onSignInLinkClick","this","signInLinkClick","emit","async","console","log","opened","initialPassword","showFormError","closeSignUpComp","handlePasswordChange","newValue","password","confirmPassword","passwordsMatch","handleCreateAccountClick","event","formSubmitted","username","email","preventDefault","handleSubmit","formData","formDataSubmitted","render","mainContent","h","class","onClick","bind","action","novalidate","type","id","placeholder","value","onChange","target","required","onInput"],"sources":["src/components/signup-comp/signup-comp.css?tag=jji-signup-comp","src/components/signup-comp/signup-comp.tsx"],"sourcesContent":["/* .form {\r\n    position: fixed;\r\n    width: 25rem;\r\n    font-family: sans-serif;\r\n    height: 31.25rem;\r\n    text-align: center;\r\n    background-color: black;\r\n    margin-left: 35%;\r\n    margin-top: 8%;\r\n    border-radius: 1rem;\r\n    opacity: 0.9;\r\n    z-index: 100;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n.form div {\r\n    margin-bottom: 1.2rem;\r\n}\r\n\r\n.form a {\r\n    color: #FDA50F;\r\n    text-decoration: none;\r\n  }\r\n  \r\n  .form a:hover {\r\n    text-decoration: underline;\r\n  }\r\n\r\n#signup {\r\n    color: #FDA50F;\r\n    font-family: sans-serif;\r\n    font-size: 2.8rem;\r\n    margin-bottom: 1.2rem;\r\n}\r\n\r\n#n,\r\n#e,\r\n#p1,\r\n#p2 {\r\n    width: 15.625rem; \r\n    height: 1.563rem;\r\n    border-radius: 0.625rem; \r\n    text-align: center;\r\n    font-family: sans-serif;\r\n    font-size: 1.2rem; \r\n    background-color: rgb(229, 226, 226);\r\n    border-color: whitesmoke;\r\n    border-width: 0.125rem; \r\n    color: black;\r\n    margin-bottom: 1.2rem;\r\n}\r\n\r\n.s {\r\n    width: 100%; \r\n    height: 0.5rem;\r\n    border-radius: 0.625rem; \r\n    text-align: center;\r\n    font-family: sans-serif;\r\n    font-size: 0.82rem; \r\n    background-color: black;\r\n    border-width: 0.125rem; \r\n    color: white;\r\n    margin-bottom: 1.2rem;\r\n}\r\n\r\n#create {\r\n    width: 16rem;\r\n    height: 2.3rem;\r\n    font-family: sans-serif;\r\n    font-size: 1.1rem;\r\n    font-weight: bold;\r\n    border-radius: 0.8rem;\r\n    background-color: black;\r\n    border-color: #FDA50F;\r\n    color: #FDA50F;\r\n    opacity: 0.8;\r\n    margin-top: 0.625rem;\r\n    margin-top: 1.2rem;\r\n}\r\n\r\n::placeholder {\r\n    color: #e1ad21;\r\n    opacity: 0.8;\r\n}\r\n/*  */\r\n.backdrop {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100vh;\r\n    background-color: rgba(0, 0, 0, 0.75);\r\n    z-index: -100;\r\n    opacity: 0;\r\n    pointer-events: none;\r\n    transition: opacity 0.3s ease-out;\r\n}\r\n\r\n.backdrop.opened {\r\n    opacity: 1;\r\n    pointer-events: all;\r\n}\r\n\r\n/* .error {\r\n    color: red;\r\n    font-size: 0.9rem;\r\n    margin-top: 0.7rem;\r\n}\r\n\r\n */ */\r\n","import { Component, Method, Prop, State, h, EventEmitter, Event, Watch } from \"@stencil/core\";\r\n// import { FETCH_API } from \"../global/Fetch-API\";\r\n\r\n\r\n\r\n@Component({\r\n    tag: 'jji-signup-comp',\r\n    styleUrl: './signup-comp.css',\r\n\r\n})\r\nexport class SignUpComp {\r\n\r\n\r\n\r\n    //Emitted when the form data is successfully submitted.\r\n    //Contains the form data as an object.\r\n    @Event({ bubbles: true, composed: true }) formDataSubmitted: EventEmitter<{ username: string, email: string, password: string, confirmPassword: string }>;\r\n\r\n\r\n    //Event listener for the event...specially to know the sign in link is clicked.\r\n    @Event({ bubbles: true, composed: true }) signInLinkClick: EventEmitter<any>;\r\n    onSignInLinkClick() {\r\n        this.signInLinkClick.emit();\r\n        // console.log('Sign In Button');\r\n    }\r\n\r\n    @Prop({ reflect: true }) titl: string;\r\n\r\n    //Controls the visibility of the sign-up form.\r\n    @Prop({ reflect: true, mutable: true }) opened: boolean;\r\n\r\n\r\n    //The user's username,e-mail,password,confirmpassword input value in the form.\r\n    @State() username: string = '';\r\n    @State() email: string = '';\r\n    @State() password: string = '';\r\n    @State() confirmPassword: string = '';\r\n\r\n\r\n    //Indicates whether the entered passwords match.\r\n    @State() passwordsMatch: boolean = true;\r\n\r\n    // Error message displayed when the passwords do not match.\r\n    @State() errorMessage: string = '';\r\n\r\n    //Indicates whether the form has been submitted.\r\n    @State() formSubmitted: boolean = false;\r\n\r\n    //The initial value of the password when the form is submitted for the first time.\r\n    //Used to track if the user corrects the password after the initial submission.\r\n    @State() initialPassword: string = '';\r\n\r\n    //New state variable to control the error message\r\n    @State() showFormError: boolean = false;\r\n\r\n    //Method to open and close the sign-up form.\r\n    @Method()\r\n    async openSignUpComp() {\r\n        console.log('Sign Up Is Open');\r\n        this.opened = true;\r\n        this.initialPassword = '';\r\n        // Reset the error message state when the component is opened\r\n        this.showFormError = false;\r\n    }\r\n    closeSignUpComp() {\r\n        console.log('Sign Up Is Closed');\r\n        this.opened = false;\r\n    }\r\n\r\n    //Watcher to monitor changes in the password and confirm password fields.\r\n    //It checks if the passwords have been corrected and match again.\r\n    @Watch('password')\r\n    @Watch('confirmPassword')\r\n    handlePasswordChange(newValue: string) {\r\n\r\n        //Check if the passwords have been corrected (not empty) and match again\r\n        if (newValue !== '' && this.password === this.confirmPassword) {\r\n            this.passwordsMatch = true;\r\n        } else {\r\n            this.passwordsMatch = false;\r\n        }\r\n    }\r\n\r\n\r\n    handleCreateAccountClick(event: MouseEvent) {\r\n        // Check if the form has been submitted\r\n        if (!this.formSubmitted) {\r\n            // Show the error message when the \"Create Account\" button is clicked\r\n            this.showFormError = true;\r\n\r\n            // Check if any required fields are empty\r\n            if (this.username === '' || this.email === '' || this.password === '' || this.confirmPassword === '') {\r\n                // Prevent form submission if fields are empty\r\n                event.preventDefault();\r\n            } else {\r\n                // If all required fields are filled, perform form submission\r\n                this.handleSubmit(event);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    //Method to handle form submission\r\n    async handleSubmit(event: Event) {\r\n        event.preventDefault();\r\n\r\n        //Check if passwords match\r\n        if (this.password === this.confirmPassword) {\r\n\r\n            //Set the initialPassword when the form is submitted for the first time\r\n            if (this.initialPassword === '') {\r\n                this.initialPassword = this.password;\r\n            }\r\n            this.passwordsMatch = true;\r\n\r\n            //Fetch the API and send the form data\r\n            const formData = {\r\n                username: this.username,\r\n                email: this.email,\r\n                password: this.password,\r\n                confirmPassword: this.confirmPassword,\r\n            };\r\n            console.log(formData);\r\n\r\n            //Emit the form data through the custom event\r\n            this.formDataSubmitted.emit(formData);\r\n\r\n\r\n            // //Perform the API call or data storage logic here\r\n            // try {\r\n            //     const response = await fetch(`${FETCH_API}`, {\r\n            //         method: 'POST',\r\n            //         headers: {\r\n            //             'Content-Type': 'application/json',\r\n            //         },\r\n            //         body: JSON.stringify(formData),\r\n            //     });\r\n            //     if (response.ok) {\r\n\r\n            //         //Passwords match and the form data is submitted successfully\r\n            //         //Redirect to the success page\r\n            //         // window.location.href = '/success.html';\r\n\r\n            //     } else {\r\n            //         console.log(response);\r\n            //     }\r\n            // } catch (error) {\r\n            //     console.error('Error submitting form:', error);\r\n            // }\r\n\r\n            // //Set formSubmitted to true after successful submission\r\n            // this.formSubmitted = true;\r\n        } else {\r\n            //Passwords don't match, show an error message or take appropriate action\r\n            this.passwordsMatch = false;\r\n\r\n            // Do not submit the form until all fields are filled correctly\r\n            this.formSubmitted = false;\r\n        }\r\n    }\r\n\r\n    //Render method to generate the component's HTML\r\n    render() {\r\n        let mainContent = null;\r\n\r\n        if (this.opened) {\r\n            mainContent = [\r\n                //HTML code for backdrop and form\r\n                <div class=\"backdrop opened\" onClick={this.closeSignUpComp.bind(this)}>\r\n                </div>,\r\n\r\n                <div class=\"app-content content\">\r\n                    <div class=\"content-overlay\"></div>\r\n                    <div class=\"content-wrapper\">\r\n                        <div class=\"content-header row\">\r\n                        </div>\r\n                        <div class=\"content-body\">\r\n                            <section class=\"row flexbox-container\">\r\n                                <div class=\"col-12 d-flex align-items-center justify-content-center\">\r\n                                    <div class=\"col-lg-4 col-md-8 col-10 box-shadow-2 p-0\">\r\n                                        <div class=\"card border-grey border-lighten-3 px-2 py-2 m-0\">\r\n                                            <div class=\"card-header border-0\">\r\n                                                <div class=\"card-title text-center\">\r\n                                                    <h1>Sign Up</h1>\r\n                                                </div>\r\n                                                <h6 class=\"card-subtitle line-on-side text-muted text-center font-small-3 pt-2\"><span>Create Account</span>\r\n                                                </h6>\r\n                                            </div>\r\n                                            <div class=\"card-content\">\r\n                                                <div class=\"card-body\">\r\n                                                    <form class=\"form-horizontal form-simple\" action=\"index.html\" novalidate>\r\n                                                        <fieldset class=\"form-group position-relative has-icon-left mb-3\">\r\n                                                            <input\r\n                                                                type=\"text\"\r\n                                                                class=\"form-control form-control-lg input-lg\"\r\n                                                                id=\"user-name\"\r\n                                                                placeholder=\"User Name\"\r\n                                                                value={this.username}\r\n                                                                onChange={(event) => this.username = (event.target as HTMLInputElement).value} />\r\n                                                            <div class=\"form-control-position\">\r\n                                                                <i class=\"la la-user\"></i>\r\n                                                            </div>\r\n                                                        </fieldset>\r\n                                                        {!this.username && this.showFormError && (\r\n                                                            <div class=\"text-danger\">Please fill in the username.</div>\r\n                                                        )}\r\n                                                        <fieldset class=\"form-group position-relative has-icon-left mb-3\">\r\n                                                            <input\r\n                                                                type=\"email\"\r\n                                                                class=\"form-control form-control-lg input-lg\"\r\n                                                                id=\"user-email\"\r\n                                                                placeholder=\"Your Email Address\"\r\n                                                                required\r\n                                                                value={this.email}\r\n                                                                onChange={(event) => this.email = (event.target as HTMLInputElement).value} />\r\n                                                            <div class=\"form-control-position\">\r\n                                                                <i class=\"la la-envelope\"></i>\r\n                                                            </div>\r\n                                                        </fieldset>\r\n                                                        {!this.email && this.showFormError && (\r\n                                                            <div class=\"text-danger\">Please fill in the email address.</div>\r\n                                                        )}\r\n                                                        <fieldset class=\"form-group position-relative has-icon-left mb-3\">\r\n                                                            <input\r\n                                                                type=\"password\"\r\n                                                                class=\"form-control form-control-lg input-lg\"\r\n                                                                id=\"user-password\"\r\n                                                                placeholder=\"Enter Password\"\r\n                                                                required\r\n                                                                value={this.password}\r\n                                                                onInput={(event) => (this.password = (event.target as HTMLInputElement).value)} />\r\n                                                            <div class=\"form-control-position\">\r\n                                                                <i class=\"la la-key\"></i>\r\n                                                            </div>\r\n                                                        </fieldset>\r\n                                                        <fieldset class=\"form-group position-relative has-icon-left mb-1\">\r\n                                                            <input\r\n                                                                type=\"password\"\r\n                                                                class=\"form-control form-control-lg input-lg\"\r\n                                                                id=\"confirm-user-password\"\r\n                                                                placeholder=\"Confirm Password\"\r\n                                                                required\r\n                                                                value={this.confirmPassword}\r\n                                                                onInput={(event) => (this.confirmPassword = (event.target as HTMLInputElement).value)} />\r\n                                                            <div class=\"form-control-position\">\r\n                                                                <i class=\"la la-key\"></i>\r\n                                                            </div>\r\n                                                        </fieldset>\r\n\r\n                                                        {!this.passwordsMatch && this.showFormError && (\r\n                                                            <div class=\"text-danger\">Passwords do not match.</div>\r\n                                                        )}\r\n                                                        <button\r\n                                                            type=\"submit\"\r\n                                                            class=\"btn btn-info btn-lg btn-block\"\r\n                                                            onClick={(event) => this.handleCreateAccountClick(event)}>\r\n                                                            <i class=\"ft-unlock\"></i> Register</button>\r\n                                                    </form>\r\n                                                </div>\r\n                                                <p class=\"text-center\">\r\n                                                    Already have an account ?\r\n                                                    <a\r\n                                                        class=\"card-link\"\r\n                                                        onClick={this.onSignInLinkClick.bind(this)}>\r\n                                                        Login\r\n                                                    </a>\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ];\r\n        }\r\n\r\n        return (\r\n            <div id=\"signup-comp\">\r\n                {mainContent}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}"],"mappings":"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"}