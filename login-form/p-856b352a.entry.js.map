{"version":3,"names":["loginCss","Login","username","password","ToggleShowPass","this","showPass","onLogin","e","preventDefault","usernameInputValid","passwordInputValid","loginEvent","emit","message","onRegister","register","onUsernameInput","target","value","trim","onPasswordInput","render","type","icon","h","class","novalidate","onSubmit","bind","name","id","placeholder","autocomplete","ref","el","userInput","onInput","required","passInput","typeof","onClick"],"sources":["src/components/login/login.css?tag=at-login","src/components/login/login.tsx"],"sourcesContent":[null,"import { Component, h, State, Event, EventEmitter } from '@stencil/core';\n\n@Component({\n  tag: 'at-login',\n  styleUrl: 'login.css',\n  shadow: false,\n})\nexport class Login {\n  @State() showPass = false;\n  @State() usernameInputValid: boolean = false;\n  @State() passwordInputValid: boolean = false;\n  @State() message: string = '';\n  passInput: HTMLInputElement;\n  userInput: HTMLInputElement;\n  @State() Login = {\n    username: '',\n    password: '',\n  };\n  @Event({ bubbles: true, composed: true }) loginEvent: EventEmitter<any>;\n  @Event({ bubbles: true, composed: true }) register: EventEmitter<any>;\n\n  ToggleShowPass() {\n    this.showPass = !this.showPass;\n  }\n\n  onLogin(e: Event) {\n    e.preventDefault();\n    if (this.usernameInputValid && this.passwordInputValid) {\n      this.loginEvent.emit(this.Login);\n      this.Login = {\n        username: '',\n        password: '',\n      };\n\n      this.usernameInputValid = this.passwordInputValid = false;\n      this.message = '';\n    } else {\n      this.message = 'Please fill out all the fields!';\n    }\n  }\n\n  onRegister() {\n    this.register.emit();\n  }\n\n  onUsernameInput(e: Event) {\n    this.Login.username = (e.target as HTMLInputElement).value;\n    if (this.Login.username.trim() !== '') {\n      this.usernameInputValid = true;\n    } else {\n      this.usernameInputValid = false;\n    }\n  }\n  onPasswordInput(e: Event) {\n    this.Login.password = (e.target as HTMLInputElement).value;\n    if (this.Login.password.trim() !== '') {\n      this.passwordInputValid = true;\n    } else {\n      this.passwordInputValid = false;\n    }\n  }\n\n  render() {\n    let type = 'password';\n    let icon = 'ft-eye';\n    if (this.showPass) {\n      type = 'text';\n      icon = 'ft-eye-off';\n    }\n\n    return [\n      <div class=\"app-content content\">\n        <div class=\"content-overlay\"></div>\n        <div class=\"content-wrapper\">\n          <div class=\"content-header row\"></div>\n          <div class=\"content-body\">\n            <section class=\"row flexbox-container\">\n              <div class=\"col-12 d-flex align-items-center justify-content-center\">\n                <div class=\"col-lg-4 col-md-8 col-10 box-shadow-2 p-0\">\n                  <div class=\"card border-grey border-lighten-3 m-0\">\n                    <div class=\"card-header border-0\">\n                      <div class=\"card-title text-center\">\n                        <div class=\"p-1\">\n                          <h1>Login</h1>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"card-content\">\n                      <div class=\"card-body\">\n                        <form class=\"form-horizontal form-simple\" novalidate onSubmit={this.onLogin.bind(this)}>\n                          <fieldset class=\"form-group position-relative has-icon-left mb-1\">\n                            <legend>Username</legend>\n\n                            <input\n                              type=\"text\"\n                              name=\"username\"\n                              id=\"username\"\n                              placeholder=\"Your Username\"\n                              autocomplete=\"off\"\n                              ref={el => (this.userInput = el)}\n                              value={this.Login.username}\n                              onInput={this.onUsernameInput.bind(this)}\n                              class=\"form-control\"\n                              required\n                            />\n                            <div class=\"form-control-position\">\n                              <i class=\"la la-user\"></i>\n                            </div>\n                          </fieldset>\n                          <fieldset class=\"form-group position-relative\">\n                            <legend>Password</legend>\n                            <input\n                              type={type}\n                              name=\"password\"\n                              id=\"password\"\n                              placeholder=\"Your Password\"\n                              autocomplete=\"off\"\n                              class=\"form-control\"\n                              ref={el => (this.passInput = el)}\n                              value={this.Login.password}\n                              onInput={this.onPasswordInput.bind(this)}\n                              required\n                            />\n                            <div typeof=\"button\" class=\"form-control-position\" onClick={this.ToggleShowPass.bind(this)}>\n                              <i class={icon}></i>\n                            </div>\n                          </fieldset>\n                          <div class=\"form-group row\">\n                            <div class=\"col-12 text-center text-sm-right\">\n                              <a class=\"card-link\">Forgot Password?</a>\n                            </div>\n                          </div>\n                          <button type=\"submit\" class=\"btn btn-info btn-block\">\n                            <i class=\"ft-unlock\"></i> Login\n                          </button>\n                          <div class=\"row mt-1 danger text-align-center\">{this.message}</div>\n                        </form>\n                      </div>\n                    </div>\n                    <div class=\"card-footer\">\n                      <div class=\"\">\n                        <p class=\"float-xl-right text-center m-0\">\n                          New here?\n                          <a class=\"card-link\" typeof=\"button\" onClick={this.onRegister.bind(this)}>\n                            Sign Up\n                          </a>\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </section>\n          </div>\n        </div>\n      </div>,\n    ];\n  }\n}\n"],"mappings":"kDAAA,MAAMA,EAAW,G,MCOJC,EAAK,M,iHACI,M,wBACmB,M,wBACA,M,aACZ,G,WAGV,CACfC,SAAU,GACVC,SAAU,G,CAKZ,cAAAC,GACEC,KAAKC,UAAYD,KAAKC,Q,CAGxB,OAAAC,CAAQC,GACNA,EAAEC,iBACF,GAAIJ,KAAKK,oBAAsBL,KAAKM,mBAAoB,CACtDN,KAAKO,WAAWC,KAAKR,KAAKJ,OAC1BI,KAAKJ,MAAQ,CACXC,SAAU,GACVC,SAAU,IAGZE,KAAKK,mBAAqBL,KAAKM,mBAAqB,MACpDN,KAAKS,QAAU,E,KACV,CACLT,KAAKS,QAAU,iC,EAInB,UAAAC,GACEV,KAAKW,SAASH,M,CAGhB,eAAAI,CAAgBT,GACdH,KAAKJ,MAAMC,SAAYM,EAAEU,OAA4BC,MACrD,GAAId,KAAKJ,MAAMC,SAASkB,SAAW,GAAI,CACrCf,KAAKK,mBAAqB,I,KACrB,CACLL,KAAKK,mBAAqB,K,EAG9B,eAAAW,CAAgBb,GACdH,KAAKJ,MAAME,SAAYK,EAAEU,OAA4BC,MACrD,GAAId,KAAKJ,MAAME,SAASiB,SAAW,GAAI,CACrCf,KAAKM,mBAAqB,I,KACrB,CACLN,KAAKM,mBAAqB,K,EAI9B,MAAAW,GACE,IAAIC,EAAO,WACX,IAAIC,EAAO,SACX,GAAInB,KAAKC,SAAU,CACjBiB,EAAO,OACPC,EAAO,Y,CAGT,MAAO,CACLC,EAAA,OAAKC,MAAM,uBACTD,EAAA,OAAKC,MAAM,oBACXD,EAAA,OAAKC,MAAM,mBACTD,EAAA,OAAKC,MAAM,uBACXD,EAAA,OAAKC,MAAM,gBACTD,EAAA,WAASC,MAAM,yBACbD,EAAA,OAAKC,MAAM,2DACTD,EAAA,OAAKC,MAAM,6CACTD,EAAA,OAAKC,MAAM,yCACTD,EAAA,OAAKC,MAAM,wBACTD,EAAA,OAAKC,MAAM,0BACTD,EAAA,OAAKC,MAAM,OACTD,EAAA,sBAINA,EAAA,OAAKC,MAAM,gBACTD,EAAA,OAAKC,MAAM,aACTD,EAAA,QAAMC,MAAM,8BAA8BC,WAAU,KAACC,SAAUvB,KAAKE,QAAQsB,KAAKxB,OAC/EoB,EAAA,YAAUC,MAAM,mDACdD,EAAA,0BAEAA,EAAA,SACEF,KAAK,OACLO,KAAK,WACLC,GAAG,WACHC,YAAY,gBACZC,aAAa,MACbC,IAAKC,GAAO9B,KAAK+B,UAAYD,EAC7BhB,MAAOd,KAAKJ,MAAMC,SAClBmC,QAAShC,KAAKY,gBAAgBY,KAAKxB,MACnCqB,MAAM,eACNY,SAAQ,OAEVb,EAAA,OAAKC,MAAM,yBACTD,EAAA,KAAGC,MAAM,iBAGbD,EAAA,YAAUC,MAAM,gCACdD,EAAA,0BACAA,EAAA,SACEF,KAAMA,EACNO,KAAK,WACLC,GAAG,WACHC,YAAY,gBACZC,aAAa,MACbP,MAAM,eACNQ,IAAKC,GAAO9B,KAAKkC,UAAYJ,EAC7BhB,MAAOd,KAAKJ,MAAME,SAClBkC,QAAShC,KAAKgB,gBAAgBQ,KAAKxB,MACnCiC,SAAQ,OAEVb,EAAA,OAAKe,OAAO,SAASd,MAAM,wBAAwBe,QAASpC,KAAKD,eAAeyB,KAAKxB,OACnFoB,EAAA,KAAGC,MAAOF,MAGdC,EAAA,OAAKC,MAAM,kBACTD,EAAA,OAAKC,MAAM,oCACTD,EAAA,KAAGC,MAAM,aAAW,sBAGxBD,EAAA,UAAQF,KAAK,SAASG,MAAM,0BAC1BD,EAAA,KAAGC,MAAM,cAAgB,UAE3BD,EAAA,OAAKC,MAAM,qCAAqCrB,KAAKS,YAI3DW,EAAA,OAAKC,MAAM,eACTD,EAAA,OAAKC,MAAM,IACTD,EAAA,KAAGC,MAAM,kCAAgC,YAEvCD,EAAA,KAAGC,MAAM,YAAYc,OAAO,SAASC,QAASpC,KAAKU,WAAWc,KAAKxB,OAAK,qB"}